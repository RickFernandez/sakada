body {
  perspective: none !important;
}

body:has(.navigation-container.opened) {
  overflow: hidden;
}

main {
  padding: 15rem 5rem 10rem;
  background-color: #000000;
}

header > .fixed-menu.styled {
  background-color: #000000 !important;
  box-shadow: none !important;
}

header > .fixed-menu > a > .white-logo {
  display: block !important;
}

.content {
  display: flex;
  align-items: center;
  justify-content: center;
}

.mascot > img {
  width: 100%;
}

.text-left,
.text-right {
  color: #ffffff;
  font-family: 'Inter', sans-serif;
  font-size: 8rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  flex-direction: column;
}

.text-left > span {
  width: 100%;
  text-align: end;
  line-height: 1.5;
}

.text-left > span:first-child,
.text-left > span:last-child {
  margin-right: -60%;
}

.text-left > span:nth-child(2n),
.text-left > span:nth-child(4n) {
  margin-right: -20%;
}

.text-right {
  position: relative;
  padding: 3rem;
  align-items: center;
  background: #000000;
  border-radius: 5rem;
  border: 10px solid #ffffff;
}

.text-right::before {
  position: absolute;
  content: '';
  top: calc(50% - 40px);
  left: -32%;
  width: 0;
  height: 0;
  border-top: 20px solid transparent;
  border-bottom: 20px solid transparent;
  border-right: 30px solid var(--white);
}

.balloon {
  display: flex;
  align-items: center;
  flex-direction: column;
}

.contact {
  margin-top: 15rem;
  display: flex;
  gap: 10rem;
  flex-wrap: wrap-reverse;
  justify-content: center;
}

.map-infos {
  display: flex;
  gap: 2rem;
  flex-wrap: wrap;
}

.infos {
  display: flex;
  gap: 2.5rem;
  flex-direction: column;
}

.infos > a {
  color: var(--white);
  font-size: 1.4rem;
  font-family: 'Inter', sans-serif;
  display: flex;
  gap: 1rem;
  align-items: center;
  text-decoration: none;
}

.infos > a:nth-child(2) {
  line-height: 2.2rem;
  align-items: flex-start;
}

.infos > a > img {
  width: 2.5rem;
  height: 2.5rem;
}

.infos > a:last-child > img {
  width: 18rem;
  height: 5.5rem;
}

.infos > a:hover {
  text-decoration: underline;
}

.address {
  display: flex;
  flex-direction: column;
}

form {
  max-width: 500px;
  width: 100%;
  height: 100%;
  padding: 3rem 5rem;
  font-family: 'Inter', sans-serif;
  background-color: var(--white);
  display: flex;
  gap: 3.2rem;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  border-radius: 2rem;
}

form > legend {
  text-align: center;
  font-size: 2.4rem;
  color: var(--pink);
  font-weight: 800;
  font-family: 'Roboto', sans-serif;
}

form > p {
  width: 100%;
  position: relative;
  display: flex;
  align-items: center;
}

form > p > label {
  position: absolute;
  bottom: 0.8rem;
  height: max-content;
  color: var(--black);
  font-weight: 600;
  transform: translate(0.6rem);
  transition: all 200ms;
}

form > p > input,
form > p > textarea {
  width: 100%;
  height: 5rem;
  padding-left: 0.8rem;
  color: var(--black);
  font-size: 2rem;
  border: none;
  outline: none;
  border-bottom: 2px solid var(--black);
  background-color: transparent;
}

form > p > textarea {
  height: 15rem;
  padding-top: 1rem;
}

form > p > input:focus,
form > p > textarea:focus,
form > p > input:hover,
form > p > textarea:hover,
form > p > input[value]:not([value='']),
form > p > textarea[value]:not([value='']) {
  border: 2px solid var(--black);
  border-radius: 0.5rem;
}

form > p > input[value]:not([value='']):valid,
form > p > textarea[value]:not([value='']):valid {
  border-color: var(--form-valid);
  border-bottom-color: green;
}

form > p > input[value]:not([value='']):invalid,
form > p > textarea[value]:not([value='']):invalid {
  border-color: var(--form-invalid);
  border-bottom-color: var(--form-invalid);
}

form > p:has(input[value]:not([value='']):valid) > label,
form > p:has(textarea[value]:not([value='']):valid) > label {
  color: var(--form-valid);
}

form > p:has(input[value]:not([value='']):invalid) > label,
form > p:has(textarea[value]:not([value='']):invalid) > label {
  color: var(--form-invalid);
}

form > p:has(input:focus) > label,
form > p:has(textarea:focus) > label,
form > p:has(input:hover) > label,
form > p:has(textarea:hover) > label,
form > p:has(input[value]:not([value=''])) > label,
form > p:has(textarea[value]:not([value=''])) > label {
  transform: translate(0.6rem, -3.5rem);
  font-size: 1.4rem;
  padding-inline: 0.5rem;
  background-color: var(--white);
}

form > p:has(textarea:focus) > label,
form > p:has(textarea:hover) > label,
form > p:has(textarea[value]:not([value=''])) > label {
  transform: translate(0.6rem, -13.5rem);
}

form > p:last-child {
  width: 100%;
  justify-content: flex-end;
}

form > p:last-child > button {
  cursor: pointer;
  padding: 1rem 4rem;
  border: none;
  outline: none;
  border-radius: 1rem;
  color: var(--white);
  background-color: var(--pink);
  font-size: 1.6rem;
  display: flex;
  gap: 0.5rem;
  align-items: center;
  justify-content: center;
}

form > p:last-child > button > img {
  width: 2.5rem;
  height: 2.5rem;
}

form > p:last-child > button:hover > img,
form > p:last-child > button:focus > img {
  animation: arrowAnimation 500ms infinite alternate ease-in-out;
}

form > p:last-child > button:focus {
  outline: -webkit-focus-ring-color auto 1px;
}

@keyframes arrowAnimation {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(0.5rem);
  }
}

@media screen and (max-width: 768px) {
  .text-left,
  .text-right {
    font-size: 6rem;
  }

  .text-right::before {
    left: -36%;
  }

  .map-infos {
    gap: 5rem;
    width: 100%;
  }

  .map-infos > iframe {
    width: 100%;
  }

  .infos {
    gap: 3.5rem;
  }

  .infos > a {
    font-size: 2rem;
  }

  .infos > a > img {
    width: 3rem;
    height: 3rem;
  }
}

@media screen and (max-width: 500px) {
  main {
    padding-inline: 3rem;
  }

  .text-left,
  .text-right {
    font-size: 3rem;
  }

  .text-right {
    padding: 1rem;
    border-width: 5px;
  }

  .text-right::before {
    border-top-width: 10px;
    border-bottom-width: 10px;
    border-right-width: 15px;
  }

  .contact {
    margin-top: 10rem;
  }

  form {
    padding: 3rem;
  }

  form > legend {
    font-size: 2rem;
  }

  form > p > textarea {
    height: 10rem;
  }

  form > p:has(textarea:focus) > label {
    transform: translate(0.6rem, -8.5rem);
  }

  .infos > a {
    font-size: 1.6rem;
  }

  .infos > a > img {
    width: 2.5rem;
    height: 2.5rem;
  }
}
